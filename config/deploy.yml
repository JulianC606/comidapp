<% require "dotenv"; Dotenv.load(".env") %>

# Name of your application. Used to uniquely configure containers.
service: debaters_relationship_manager

# Name of the container image.
image: drm

# Deploy to these servers.
servers:
  web:
    hosts:
      - <%= ENV['HOST_SERVER'] %>

# Enable SSL auto certification via Let's Encrypt and allow for multiple apps on a single web server.
# Remove this section when using multiple web servers and ensure you terminate SSL at your load balancer.
#
# Note: If using Cloudflare, set encryption mode in SSL/TLS setting to "Full" to enable CF-to-app encryption.
proxy:
  ssl: true
  host: <%= ENV['HOST'] %> 
  app_port: 80


# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  server: <%= ENV['REGISTRY_SERVER'] %>
  username: <%= ENV['REGISTRY_USER'] %>

  # Always use an access token rather than real password when possible.
  password:
    - REGISTRY_PASSWORD

# Aliases are triggered with "bin/kamal <alias>". You can overwrite arguments on invocation:
# "bin/kamal logs -r job" will tail logs from the first server in the job section.
aliases:
  console: app exec --interactive --reuse "bin/rails console"
  shell: app exec --interactive --reuse "bash"
  logs: app logs -f
  dbc: app exec --interactive --reuse "bin/rails dbconsole"


# Use a persistent storage volume for sqlite database files and local Active Storage files.
# Recommended to change this to a mounted volume path that is backed up off server.
volumes:
  - 'storage:/rails/storage'


# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
asset_path: /rails/public/assets

# Configure the image builder.
builder:
  arch: amd64

  # # Build image via remote server (useful for faster amd64 builds on arm64 computers)
  # remote: ssh://docker@docker-builder-server
  #
  # # Pass arguments and secrets to the Docker build process
  # args:
  #   RUBY_VERSION: ruby-3.3.5
  # secrets:
  #   - GITHUB_TOKEN
  #   - RAILS_MASTER_KEY

# Use a different ssh user than root
# ssh:
#   user: root


# Use accessory services (secrets come from .kamal/secrets).
# accessories:
env:
  secret:
    - RAILS_MASTER_KEY
  clear:
    SOLID_QUEUE_IN_PUMA: true
    DB_PRIMARY: storage/primary_db.sqlite3
    DB_CACHE: storage/cache_db.sqlite3
    DB_QUEUE: storage/queue_db.sqlite3
    DB_CABLE: storage/cable_db.sqlite3
